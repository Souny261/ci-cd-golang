name: Release to Docker Hub

on:
  push:
    branches: ["main"]
    tags:
      - "*.*.*"

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: build
        uses: docker/build-push-action@v2
        continue-on-error: true
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/golangapi:lastest

      # - name: Call Portainer Webhook to Update Service
      #   id: callportainerwebhook
      #   if: steps.build.outcome == 'success'
      #   continue-on-error: true
      #   run: |

      #     CODE=`curl --write-out '%{http_code}' \
      #         --silent \
      #         --output /dev/null \
      #         --request POST \
      #         --url 'https://portainer.kokkoksole.com/api/webhooks/f51099da-0414-4cf4-b616-666fe0f42dbe'`

      #     if [ $CODE != "204" ]
      #     then
      #         echo $CODE
      #         echo "FAILURE"
      #         exit 1
      #     else
      #         echo $CODE
      #         echo "SUCCESS"
      #         exit 0
      #     fi

      # - name: Sent LINE Noti - Success
      #   if: steps.build.outcome == 'success' && steps.callportainerwebhook.outcome == 'success'
      #   uses: snow-actions/line-notify@v1.0.0
      #   with:
      #     access_token: ${{ secrets.LINE_ACCESS_TOKEN }}
      #     message: "üëè Backend | build and deploy ‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á ${{ github.event.commits[0].message }} ‡∏Ç‡∏≠‡∏á ${{ github.event.commits[0].author.name }} ‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß ‡∏£‡∏≠‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏° Compile 1 ‡∏ô‡∏≤‡∏ó‡∏µ ‡πÅ‡∏•‡πâ‡∏ß‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢ üòé"

      # - name: Sent LINE Noti - Failure
      #   if: steps.build.outcome != 'success' || steps.callportainerwebhook.outcome != 'success'
      #   uses: snow-actions/line-notify@v1.0.0
      #   with:
      #     access_token: ${{ secrets.LINE_ACCESS_TOKEN }}
      #     message: "‚ùå‚ùå‚ùå  Backend - Build Error ‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á ${{ github.event.commits[0].message }} ‡∏Ç‡∏≠‡∏á ${{ github.event.commits[0].author.name }} ‡πÇ‡∏õ‡∏£‡∏î‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö"
